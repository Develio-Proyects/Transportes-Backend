plugins {
	// Habilita el soporte para proyectos Kotlin en JVM, permitiendo compilar código Kotlin para la JVM.
	id 'org.jetbrains.kotlin.jvm' version '2.0.20'

	// Habilita la integración de Kotlin con Spring, permitiendo utilizar características de Spring con código Kotlin.
	id 'org.jetbrains.kotlin.plugin.spring' version '2.0.20'

	// Plugin esencial para crear aplicaciones Spring Boot, facilitando la configuración y la ejecución de la aplicación.
	id 'org.springframework.boot' version '3.3.2'

	// Gestiona automáticamente las versiones de las dependencias de Spring Boot y otras bibliotecas.
	id 'io.spring.dependency-management' version '1.1.6'

	// Añade soporte para JPA en proyectos Kotlin, facilitando la creación de entidades JPA.
	id "org.jetbrains.kotlin.plugin.jpa" version "2.0.20"

	// Permite la creación de clases sin argumentos en Kotlin, útil para trabajar con frameworks que requieren constructores sin argumentos.
	id "org.jetbrains.kotlin.plugin.noarg" version "2.0.20"
}

group = 'transportes'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Proporciona las dependencias esenciales para una aplicación Spring Boot, incluyendo la configuración automática.
	implementation 'org.springframework.boot:spring-boot-starter:3.3.3'

	// Añade soporte para crear aplicaciones web, incluyendo RESTful, con Spring MVC.
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'

	// Añade seguridad a todos los endpoints de la aplicación, permitiendo configurar la autenticación y autorización.
	implementation 'org.springframework.boot:spring-boot-starter-security:3.3.3'

	// Proporciona soporte para la validación de datos en aplicaciones Spring, permitiendo validar objetos y parámetros.
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.3'

	// JWT (JSON Web Token) para Spring Security, útil para autenticar y autorizar solicitudes HTTP con tokens JWT.
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// Dependencia para manejar la serialización/deserialización de XML en Java
	implementation "javax.xml.bind:jaxb-api:2.3.1"

	// Habilita la reflexión en Kotlin, útil para trabajar con metadatos de clases.
	runtimeOnly 'org.jetbrains.kotlin:kotlin-reflect:2.0.20'

	// Incluye las dependencias necesarias para escribir y ejecutar pruebas unitarias en Spring Boot.
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.3'

	// Permite la ejecución de pruebas con JUnit utilizando el lanzador de la plataforma JUnit.
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.0'

	// Incluye el soporte para pruebas unitarias con Kotlin utilizando JUnit 5.
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5:2.0.20'

	// Añade soporte para JPA (Java Persistence API) en Spring, facilitando el acceso y la gestión de bases de datos relacionales.
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'

	// Controlador JDBC para PostgreSQL, necesario para conectar y operar con bases de datos PostgreSQL.
	implementation 'org.postgresql:postgresql:42.7.4'

	// Base de datos en memoria H2, útil para pruebas y desarrollo rápido.
	runtimeOnly "com.h2database:h2:2.3.232"

	// Proporciona la biblioteca estándar de Kotlin con características adicionales de la versión JDK 8.
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.20'

	// Facilita la generación automática de documentación de API REST utilizando OpenAPI en aplicaciones Spring MVC.
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

noArg {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}

allOpen {
	annotation("jakarta.persistence.Entity")
	annotation("jakarta.persistence.MappedSuperclass")
	annotation("jakarta.persistence.Embeddable")
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
